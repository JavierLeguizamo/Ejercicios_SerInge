
SerInge_Ejercicio_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000382  00000416  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000382  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800106  00800106  0000041c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000044c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000079d  00000000  00000000  000004c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006aa  00000000  00000000  00000c61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002af  00000000  00000000  0000130b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  000015bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d6  00000000  00000000  00001610  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000050  00000000  00000000  000019e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001a36  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e8       	ldi	r30, 0x82	; 130
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 30       	cpi	r26, 0x0A	; 10
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6d 00 	call	0xda	; 0xda <main>
  9e:	0c 94 bf 01 	jmp	0x37e	; 0x37e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <apagado>:
	void (*funcionamiento)(void);
	struct estado *siguiente;
}Estado;

void apagado(void){
	PORTD = 0;
  a6:	1b b8       	out	0x0b, r1	; 11
  a8:	08 95       	ret

000000aa <parpadeo>:
	
}
void parpadeo(){
 	PORTD =SEC_1  ;
  aa:	85 e5       	ldi	r24, 0x55	; 85
  ac:	8b b9       	out	0x0b, r24	; 11
// 	_delay_ms(DELAY);
	PORTD =SEC_2;
  ae:	8a ea       	ldi	r24, 0xAA	; 170
  b0:	8b b9       	out	0x0b, r24	; 11
  b2:	08 95       	ret

000000b4 <desplazamiento>:
// 	_delay_ms(DELAY);
	
}
void desplazamiento(){
	PORTD = (PORTD!=128)?((PORTD==SEC_1) || (PORTD==SEC_2))?1:(PORTD<<1):1;
  b4:	8b b1       	in	r24, 0x0b	; 11
  b6:	80 38       	cpi	r24, 0x80	; 128
  b8:	49 f0       	breq	.+18     	; 0xcc <desplazamiento+0x18>
  ba:	8b b1       	in	r24, 0x0b	; 11
  bc:	85 35       	cpi	r24, 0x55	; 85
  be:	41 f0       	breq	.+16     	; 0xd0 <desplazamiento+0x1c>
  c0:	8b b1       	in	r24, 0x0b	; 11
  c2:	8a 3a       	cpi	r24, 0xAA	; 170
  c4:	39 f0       	breq	.+14     	; 0xd4 <desplazamiento+0x20>
  c6:	8b b1       	in	r24, 0x0b	; 11
  c8:	88 0f       	add	r24, r24
  ca:	05 c0       	rjmp	.+10     	; 0xd6 <desplazamiento+0x22>
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	03 c0       	rjmp	.+6      	; 0xd6 <desplazamiento+0x22>
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	01 c0       	rjmp	.+2      	; 0xd6 <desplazamiento+0x22>
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	8b b9       	out	0x0b, r24	; 11
  d8:	08 95       	ret

000000da <main>:
}

int main(void)
{
    /* Replace with your application code */
	Estado *estado1 = (Estado *)malloc(sizeof(Estado));
  da:	84 e0       	ldi	r24, 0x04	; 4
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 9e 00 	call	0x13c	; 0x13c <malloc>
  e2:	ec 01       	movw	r28, r24
	Estado *estado2 = (Estado *)malloc(sizeof(Estado));
  e4:	84 e0       	ldi	r24, 0x04	; 4
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	0e 94 9e 00 	call	0x13c	; 0x13c <malloc>
  ec:	8c 01       	movw	r16, r24
	Estado *estado3 = (Estado *)malloc(sizeof(Estado));
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 9e 00 	call	0x13c	; 0x13c <malloc>
	Estado *estadoActual = (Estado *)malloc(sizeof(Estado));
	estado1->funcionamiento = apagado;
  f6:	23 e5       	ldi	r18, 0x53	; 83
  f8:	30 e0       	ldi	r19, 0x00	; 0
  fa:	39 83       	std	Y+1, r19	; 0x01
  fc:	28 83       	st	Y, r18
	estado1->siguiente = estado2;
  fe:	1b 83       	std	Y+3, r17	; 0x03
 100:	0a 83       	std	Y+2, r16	; 0x02
	estado2->funcionamiento = parpadeo;
 102:	25 e5       	ldi	r18, 0x55	; 85
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	f8 01       	movw	r30, r16
 108:	31 83       	std	Z+1, r19	; 0x01
 10a:	20 83       	st	Z, r18
	estado2->siguiente = estado3;
 10c:	93 83       	std	Z+3, r25	; 0x03
 10e:	82 83       	std	Z+2, r24	; 0x02
	estado3->funcionamiento = desplazamiento;
 110:	2a e5       	ldi	r18, 0x5A	; 90
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	fc 01       	movw	r30, r24
 116:	31 83       	std	Z+1, r19	; 0x01
 118:	20 83       	st	Z, r18
	estado3->siguiente = estado1;
 11a:	d3 83       	std	Z+3, r29	; 0x03
 11c:	c2 83       	std	Z+2, r28	; 0x02
	estadoActual = estado1;
	DDRD |= 0xFF;
 11e:	8a b1       	in	r24, 0x0a	; 10
 120:	8f ef       	ldi	r24, 0xFF	; 255
 122:	8a b9       	out	0x0a, r24	; 10
	DDRC &= ~(1<<DDC0);
 124:	38 98       	cbi	0x07, 0	; 7
    while (1) 
    {
		estadoActual->funcionamiento();
 126:	e8 81       	ld	r30, Y
 128:	f9 81       	ldd	r31, Y+1	; 0x01
 12a:	09 95       	icall
		if ((PINC&(1<<DDC0)) IGUAL_A 1)
 12c:	30 9b       	sbis	0x06, 0	; 6
 12e:	fb cf       	rjmp	.-10     	; 0x126 <main+0x4c>
		{
			while(((PINC&(1<<DDC0))!=0) IGUAL_A 1);
 130:	30 99       	sbic	0x06, 0	; 6
 132:	fe cf       	rjmp	.-4      	; 0x130 <main+0x56>
			estadoActual = estadoActual->siguiente;
 134:	0a 80       	ldd	r0, Y+2	; 0x02
 136:	db 81       	ldd	r29, Y+3	; 0x03
 138:	c0 2d       	mov	r28, r0
 13a:	f5 cf       	rjmp	.-22     	; 0x126 <main+0x4c>

0000013c <malloc>:
 13c:	0f 93       	push	r16
 13e:	1f 93       	push	r17
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
 144:	82 30       	cpi	r24, 0x02	; 2
 146:	91 05       	cpc	r25, r1
 148:	10 f4       	brcc	.+4      	; 0x14e <malloc+0x12>
 14a:	82 e0       	ldi	r24, 0x02	; 2
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__flp>
 152:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__flp+0x1>
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	a0 e0       	ldi	r26, 0x00	; 0
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	30 97       	sbiw	r30, 0x00	; 0
 160:	19 f1       	breq	.+70     	; 0x1a8 <malloc+0x6c>
 162:	40 81       	ld	r20, Z
 164:	51 81       	ldd	r21, Z+1	; 0x01
 166:	02 81       	ldd	r16, Z+2	; 0x02
 168:	13 81       	ldd	r17, Z+3	; 0x03
 16a:	48 17       	cp	r20, r24
 16c:	59 07       	cpc	r21, r25
 16e:	c8 f0       	brcs	.+50     	; 0x1a2 <malloc+0x66>
 170:	84 17       	cp	r24, r20
 172:	95 07       	cpc	r25, r21
 174:	69 f4       	brne	.+26     	; 0x190 <malloc+0x54>
 176:	10 97       	sbiw	r26, 0x00	; 0
 178:	31 f0       	breq	.+12     	; 0x186 <malloc+0x4a>
 17a:	12 96       	adiw	r26, 0x02	; 2
 17c:	0c 93       	st	X, r16
 17e:	12 97       	sbiw	r26, 0x02	; 2
 180:	13 96       	adiw	r26, 0x03	; 3
 182:	1c 93       	st	X, r17
 184:	27 c0       	rjmp	.+78     	; 0x1d4 <malloc+0x98>
 186:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__flp>
 18a:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__flp+0x1>
 18e:	22 c0       	rjmp	.+68     	; 0x1d4 <malloc+0x98>
 190:	21 15       	cp	r18, r1
 192:	31 05       	cpc	r19, r1
 194:	19 f0       	breq	.+6      	; 0x19c <malloc+0x60>
 196:	42 17       	cp	r20, r18
 198:	53 07       	cpc	r21, r19
 19a:	18 f4       	brcc	.+6      	; 0x1a2 <malloc+0x66>
 19c:	9a 01       	movw	r18, r20
 19e:	bd 01       	movw	r22, r26
 1a0:	ef 01       	movw	r28, r30
 1a2:	df 01       	movw	r26, r30
 1a4:	f8 01       	movw	r30, r16
 1a6:	db cf       	rjmp	.-74     	; 0x15e <malloc+0x22>
 1a8:	21 15       	cp	r18, r1
 1aa:	31 05       	cpc	r19, r1
 1ac:	f9 f0       	breq	.+62     	; 0x1ec <malloc+0xb0>
 1ae:	28 1b       	sub	r18, r24
 1b0:	39 0b       	sbc	r19, r25
 1b2:	24 30       	cpi	r18, 0x04	; 4
 1b4:	31 05       	cpc	r19, r1
 1b6:	80 f4       	brcc	.+32     	; 0x1d8 <malloc+0x9c>
 1b8:	8a 81       	ldd	r24, Y+2	; 0x02
 1ba:	9b 81       	ldd	r25, Y+3	; 0x03
 1bc:	61 15       	cp	r22, r1
 1be:	71 05       	cpc	r23, r1
 1c0:	21 f0       	breq	.+8      	; 0x1ca <malloc+0x8e>
 1c2:	fb 01       	movw	r30, r22
 1c4:	93 83       	std	Z+3, r25	; 0x03
 1c6:	82 83       	std	Z+2, r24	; 0x02
 1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <malloc+0x96>
 1ca:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__flp+0x1>
 1ce:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__flp>
 1d2:	fe 01       	movw	r30, r28
 1d4:	32 96       	adiw	r30, 0x02	; 2
 1d6:	44 c0       	rjmp	.+136    	; 0x260 <malloc+0x124>
 1d8:	fe 01       	movw	r30, r28
 1da:	e2 0f       	add	r30, r18
 1dc:	f3 1f       	adc	r31, r19
 1de:	81 93       	st	Z+, r24
 1e0:	91 93       	st	Z+, r25
 1e2:	22 50       	subi	r18, 0x02	; 2
 1e4:	31 09       	sbc	r19, r1
 1e6:	39 83       	std	Y+1, r19	; 0x01
 1e8:	28 83       	st	Y, r18
 1ea:	3a c0       	rjmp	.+116    	; 0x260 <malloc+0x124>
 1ec:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 1f0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 1f4:	23 2b       	or	r18, r19
 1f6:	41 f4       	brne	.+16     	; 0x208 <malloc+0xcc>
 1f8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 1fc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 200:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__data_end+0x1>
 204:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__data_end>
 208:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 20c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 210:	21 15       	cp	r18, r1
 212:	31 05       	cpc	r19, r1
 214:	41 f4       	brne	.+16     	; 0x226 <malloc+0xea>
 216:	2d b7       	in	r18, 0x3d	; 61
 218:	3e b7       	in	r19, 0x3e	; 62
 21a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 21e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 222:	24 1b       	sub	r18, r20
 224:	35 0b       	sbc	r19, r21
 226:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 22a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 22e:	e2 17       	cp	r30, r18
 230:	f3 07       	cpc	r31, r19
 232:	a0 f4       	brcc	.+40     	; 0x25c <malloc+0x120>
 234:	2e 1b       	sub	r18, r30
 236:	3f 0b       	sbc	r19, r31
 238:	28 17       	cp	r18, r24
 23a:	39 07       	cpc	r19, r25
 23c:	78 f0       	brcs	.+30     	; 0x25c <malloc+0x120>
 23e:	ac 01       	movw	r20, r24
 240:	4e 5f       	subi	r20, 0xFE	; 254
 242:	5f 4f       	sbci	r21, 0xFF	; 255
 244:	24 17       	cp	r18, r20
 246:	35 07       	cpc	r19, r21
 248:	48 f0       	brcs	.+18     	; 0x25c <malloc+0x120>
 24a:	4e 0f       	add	r20, r30
 24c:	5f 1f       	adc	r21, r31
 24e:	50 93 07 01 	sts	0x0107, r21	; 0x800107 <__data_end+0x1>
 252:	40 93 06 01 	sts	0x0106, r20	; 0x800106 <__data_end>
 256:	81 93       	st	Z+, r24
 258:	91 93       	st	Z+, r25
 25a:	02 c0       	rjmp	.+4      	; 0x260 <malloc+0x124>
 25c:	e0 e0       	ldi	r30, 0x00	; 0
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	cf 01       	movw	r24, r30
 262:	df 91       	pop	r29
 264:	cf 91       	pop	r28
 266:	1f 91       	pop	r17
 268:	0f 91       	pop	r16
 26a:	08 95       	ret

0000026c <free>:
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	00 97       	sbiw	r24, 0x00	; 0
 272:	09 f4       	brne	.+2      	; 0x276 <free+0xa>
 274:	81 c0       	rjmp	.+258    	; 0x378 <free+0x10c>
 276:	fc 01       	movw	r30, r24
 278:	32 97       	sbiw	r30, 0x02	; 2
 27a:	13 82       	std	Z+3, r1	; 0x03
 27c:	12 82       	std	Z+2, r1	; 0x02
 27e:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__flp>
 282:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__flp+0x1>
 286:	10 97       	sbiw	r26, 0x00	; 0
 288:	81 f4       	brne	.+32     	; 0x2aa <free+0x3e>
 28a:	20 81       	ld	r18, Z
 28c:	31 81       	ldd	r19, Z+1	; 0x01
 28e:	82 0f       	add	r24, r18
 290:	93 1f       	adc	r25, r19
 292:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 296:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 29a:	28 17       	cp	r18, r24
 29c:	39 07       	cpc	r19, r25
 29e:	51 f5       	brne	.+84     	; 0x2f4 <free+0x88>
 2a0:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <__data_end+0x1>
 2a4:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <__data_end>
 2a8:	67 c0       	rjmp	.+206    	; 0x378 <free+0x10c>
 2aa:	ed 01       	movw	r28, r26
 2ac:	20 e0       	ldi	r18, 0x00	; 0
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	ce 17       	cp	r28, r30
 2b2:	df 07       	cpc	r29, r31
 2b4:	40 f4       	brcc	.+16     	; 0x2c6 <free+0x5a>
 2b6:	4a 81       	ldd	r20, Y+2	; 0x02
 2b8:	5b 81       	ldd	r21, Y+3	; 0x03
 2ba:	9e 01       	movw	r18, r28
 2bc:	41 15       	cp	r20, r1
 2be:	51 05       	cpc	r21, r1
 2c0:	f1 f0       	breq	.+60     	; 0x2fe <free+0x92>
 2c2:	ea 01       	movw	r28, r20
 2c4:	f5 cf       	rjmp	.-22     	; 0x2b0 <free+0x44>
 2c6:	d3 83       	std	Z+3, r29	; 0x03
 2c8:	c2 83       	std	Z+2, r28	; 0x02
 2ca:	40 81       	ld	r20, Z
 2cc:	51 81       	ldd	r21, Z+1	; 0x01
 2ce:	84 0f       	add	r24, r20
 2d0:	95 1f       	adc	r25, r21
 2d2:	c8 17       	cp	r28, r24
 2d4:	d9 07       	cpc	r29, r25
 2d6:	59 f4       	brne	.+22     	; 0x2ee <free+0x82>
 2d8:	88 81       	ld	r24, Y
 2da:	99 81       	ldd	r25, Y+1	; 0x01
 2dc:	84 0f       	add	r24, r20
 2de:	95 1f       	adc	r25, r21
 2e0:	02 96       	adiw	r24, 0x02	; 2
 2e2:	91 83       	std	Z+1, r25	; 0x01
 2e4:	80 83       	st	Z, r24
 2e6:	8a 81       	ldd	r24, Y+2	; 0x02
 2e8:	9b 81       	ldd	r25, Y+3	; 0x03
 2ea:	93 83       	std	Z+3, r25	; 0x03
 2ec:	82 83       	std	Z+2, r24	; 0x02
 2ee:	21 15       	cp	r18, r1
 2f0:	31 05       	cpc	r19, r1
 2f2:	29 f4       	brne	.+10     	; 0x2fe <free+0x92>
 2f4:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__flp+0x1>
 2f8:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__flp>
 2fc:	3d c0       	rjmp	.+122    	; 0x378 <free+0x10c>
 2fe:	e9 01       	movw	r28, r18
 300:	fb 83       	std	Y+3, r31	; 0x03
 302:	ea 83       	std	Y+2, r30	; 0x02
 304:	49 91       	ld	r20, Y+
 306:	59 91       	ld	r21, Y+
 308:	c4 0f       	add	r28, r20
 30a:	d5 1f       	adc	r29, r21
 30c:	ec 17       	cp	r30, r28
 30e:	fd 07       	cpc	r31, r29
 310:	61 f4       	brne	.+24     	; 0x32a <free+0xbe>
 312:	80 81       	ld	r24, Z
 314:	91 81       	ldd	r25, Z+1	; 0x01
 316:	84 0f       	add	r24, r20
 318:	95 1f       	adc	r25, r21
 31a:	02 96       	adiw	r24, 0x02	; 2
 31c:	e9 01       	movw	r28, r18
 31e:	99 83       	std	Y+1, r25	; 0x01
 320:	88 83       	st	Y, r24
 322:	82 81       	ldd	r24, Z+2	; 0x02
 324:	93 81       	ldd	r25, Z+3	; 0x03
 326:	9b 83       	std	Y+3, r25	; 0x03
 328:	8a 83       	std	Y+2, r24	; 0x02
 32a:	e0 e0       	ldi	r30, 0x00	; 0
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	12 96       	adiw	r26, 0x02	; 2
 330:	8d 91       	ld	r24, X+
 332:	9c 91       	ld	r25, X
 334:	13 97       	sbiw	r26, 0x03	; 3
 336:	00 97       	sbiw	r24, 0x00	; 0
 338:	19 f0       	breq	.+6      	; 0x340 <free+0xd4>
 33a:	fd 01       	movw	r30, r26
 33c:	dc 01       	movw	r26, r24
 33e:	f7 cf       	rjmp	.-18     	; 0x32e <free+0xc2>
 340:	8d 91       	ld	r24, X+
 342:	9c 91       	ld	r25, X
 344:	11 97       	sbiw	r26, 0x01	; 1
 346:	9d 01       	movw	r18, r26
 348:	2e 5f       	subi	r18, 0xFE	; 254
 34a:	3f 4f       	sbci	r19, 0xFF	; 255
 34c:	82 0f       	add	r24, r18
 34e:	93 1f       	adc	r25, r19
 350:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
 354:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
 358:	28 17       	cp	r18, r24
 35a:	39 07       	cpc	r19, r25
 35c:	69 f4       	brne	.+26     	; 0x378 <free+0x10c>
 35e:	30 97       	sbiw	r30, 0x00	; 0
 360:	29 f4       	brne	.+10     	; 0x36c <free+0x100>
 362:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__flp+0x1>
 366:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__flp>
 36a:	02 c0       	rjmp	.+4      	; 0x370 <free+0x104>
 36c:	13 82       	std	Z+3, r1	; 0x03
 36e:	12 82       	std	Z+2, r1	; 0x02
 370:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x1>
 374:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end>
 378:	df 91       	pop	r29
 37a:	cf 91       	pop	r28
 37c:	08 95       	ret

0000037e <_exit>:
 37e:	f8 94       	cli

00000380 <__stop_program>:
 380:	ff cf       	rjmp	.-2      	; 0x380 <__stop_program>
